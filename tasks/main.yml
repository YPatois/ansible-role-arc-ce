---
- name: Get VOMS client packages based on OS
  include_vars:
    dir: vars
    files_matching: "{{ ansible_distribution }}{{ ansible_distribution_major_version}}.yml"
    name: os_vars
  tags:
    - testing
    - all

- name: arc_frontend_griddir must be defined
  assert:
    that: "arc_frontend_griddir is defined"

- name: arc_frontend_sessiondir must be defined
  assert:
    that: "arc_frontend_sessiondir is defined"

- name: install Nordugrid ARC packages
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ arc_frontend_packages | default({}) }}"

- name: Create Grid dir 
  file:
    path: "{{ arc_frontend_griddir }}"
    state: directory
    owner: root
    mode: 0755

- name: Create Session dir 
  file:
    path: "{{ arc_frontend_sessiondir }}"
    state: directory
    owner: nobody
    group: nobody
    mode: 0755

- name: Create Control dir 
  file:
    path: "{{ arc_frontend_controldir }}"
    state: directory

- name: Template arc.conf file
  template:
    backup: yes
    src: "arc{{ arc_version }}.conf.j2"
    dest: /etc/arc.conf
    owner: root
    mode: 0644

- name: start and enable arc frontend services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ arc_frontend_services[arc_version] | default({}) }}"

- name: Validate a-rex service
  shell: /etc/init.d/a-rex validate

- block:
    - name: Set variables
      set_fact:
        jobid_file: "/tmp/jobids.info"

    - name: Install ARC and voms clients
      package:
        name: "{{ item }}"
      with_items: "{{ os_vars.voms_pkgs }} + [ 'nordugrid-arc-client' ]"
    
    - name: Get DN from user proxy certificate
      shell: /usr/bin/voms-proxy-info -file "{{ proxy_file }}" -identity
      register: proxy_dn
    
    - name: Map DN to current account in grid-mapfile
      lineinfile:
        dest: /etc/grid-security/grid-mapfile
        line: '"{{ proxy_dn.stdout }}" {{ ansible_env.SUDO_USER }}'

    - name: Get proxy info
      shell: /usr/bin/arcproxy -I -P "{{ proxy_file }}"
      register: proxy_info
 
    - debug:
        msg: "{{ proxy_info.stdout }}"

    - name: Submit job
      shell: /usr/bin/arctest -c "{{ ansible_fqdn }}" -J 1 -o "{{ jobid_file }}"
  
    - name: Wait for job to end ({{ testing_no_delay }}s delay, {{testing_no_retries}}s retries)
      shell: /usr/bin/arcstat -i "{{ jobid_file }}"
      register: job_status
      until: job_status.stdout.find("Finished") != -1
      retries: "{{ testing_no_retries }}"
      delay: "{{ testing_no_delay }}"
  environment:
    X509_USER_PROXY: "{{ proxy_file }}"
  when: enable_testing 
  tags:
    - testing
